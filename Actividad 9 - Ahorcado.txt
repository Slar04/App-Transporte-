/*
Actividad 9
Modifique programa del "Ahorcado" para que:
Tenga clases, objetos, constructor y destructor 
elaborado por usted, miembros privados, amigos,
puntero this, mensajes y que tenga al menos 10 palabras 
de base, que de solo 8 oportunidades de "Error" antes 
de ahorcado.
*/

/*Esta es un prueba para decirle al mundo que somos chingones*/
#include <cstring>
#include <stdlib.h>
#include <stdio.h>
#include <conio.h>
#include <iostream>
#include <time.h>
using namespace std;

#define Limite 8
#define N 10

class Ahorcado {
	char Palabras[N][30] = { "perro","gato","avion","constructor","lapiz","pizarron","cargador","terco","unidad","visual" }; //Palabras base del juego
	//char Pal[30];//Palabra escogida
public:
	char Letra[30], Frase[30] = { '\0' };//Letra son la cantidad de letras que puedes tener y frase son las letras que han sido acertadas
	int Intentos=0, Bien, Mal, Nlet, Npal; // Npal es el numero de la palabra que se ecogera en el arreglo escogida al azar
	Ahorcado::Ahorcado() { Npal = rand() % 9; Nlet = strlen(Palabras[Npal]); };
	//void Ahorcado::Ingresa();
	void Ahorcado::operator ++();
	friend void Resultado(Ahorcado &obj, int);
	Ahorcado::~Ahorcado();
};

void Ahorcado::operator++() {
	int i = 0, j = 0, b[15], m, Npal=0;//b y m son variables para contar los errores y asi poder descontar los intentos
	
	do {

		system("cls");
		m = 0;

		//Impresion de las letras faltantes
		for (i = 0; i < Nlet; i++) {
			if (Frase[i] != '\0') {
				cout << " " << Frase[i] << " ";
			}
			else {
				cout << " - ";
			}
		}
		
		//Ingrecion de la letra
		cout << "\nLetras= " << Nlet /*<< " Palabra= " << Palabras[Npal]*/ << " Intentos= " << Limite<<" Errores= "<< Intentos << endl;
		cout << "Ingresa una letra: ";
		cin >> Letra[j];

		//Letra repetida
		for (i = j - 1; i >= 0; i--) {
			while (Letra[j] == Letra[i] && j != 0) {
				cout << "Esa letra ya la ingresaste, ingresa otra: ";
				cin >> Letra[j];
			}
		}

		//Asignacion de la letra correcta
		for (i = 0; i < Nlet; i++) {
			if (Palabras[this->Npal][i] == Letra[j]) {
				Frase[i] = Letra[j];
			}
		}			

		//Saber si se equivoco
		for (i = 0; i < Nlet; i++) {
			if (Frase[i] == '\0') {
				m++;
			}
		}

		b[j] = Nlet - m;
		if (b[j] == b[j - 1] && j>0) {
			Intentos++;
		}
		if (m == Nlet && j == 0) {
			Intentos++;
		}
		if (m == 0) {
			Intentos = Limite + 1;
		}

		j++;

	} while (Intentos < Limite);
}

void Resultado(Ahorcado &obj, int Intentos) {
	int res = Intentos;
	if (res == Limite + 1) {
		system("cls");
		cout << "Correcto la palabra es: "<<obj.Palabras[obj.Npal]<<"\n!!!!!Felicidades, haz ganado!!!!!\n";
	}
	if (res == Limite) {
		system("cls");
		cout << "Lo siento haz perdido, la palabra era: " << obj.Palabras[obj.Npal] << endl;
	}
}

Ahorcado::~Ahorcado() {
	cout << "Bye\n";
	getch();
	system("cls");
}

int main() {
	srand(time(NULL));
	int resp = 0, Npal; 
	do {
		cout << "******************************\n"
			<< "Ahorcado\n" << "******************************\n"
			<<"Tu palabra fue elegida al azar, intenta adivinarla.\n"
			"Preciona una tecla para comenzar...";
		getch();
		system("cls");
		Ahorcado A;
		++A;
		Resultado(A, A.Intentos);

		cout << "\nDesea repetir el programa? Si=1, No=0\nResp:";
		cin >> resp;
	} while (resp != 0);

	return 0;
}


/*
int main() {
	char frase[60], rep[100], temporal[100];
	char pal;
	int longitud, i, j, inicial, acertado = 0, temp = 0, oportunidades = 5;
	int repetido = 0, gano = 0;

	printf("\tJuego del Ahorcado\n");
	printf("Introduzca la palabra a adivinar: ");
	cin.getline(frase,60);

	system("cls");

	longitud = 0;
	inicial = 0;
	j = 0;

	rep[0] = ' ';
	rep[1] = '\0';

	do {
		system("cls");
		temp = 0;

		if (inicial == 0) {
			for (i = 0; i<strlen(frase); i++) {
				if (frase[i] == ' ') {
					temporal[i] = ' ';
					longitud++;
				}
				else {
					temporal[i] = '_';
					longitud++;
				}
			}
		}

		inicial = 1;

		temporal[longitud] = '\0';

		for (i = 0; i<strlen(rep); i++) {
			if (rep[i] == pal) {
				repetido = 1;
				break;
			}
			else {
				repetido = 0;
			}
		}

		if (repetido == 0) {
			for (i = 0; i<strlen(frase); i++) {
				if (frase[i] == pal) {
					temporal[i] = pal;
					acertado++;
					temp = 1;
				}
			}
		}

		if (repetido == 0) {
			if (temp == 0) {
				oportunidades = oportunidades - 1;
			}
		}
		else {
			printf("Ya se ha introducido este caracter");
			printf("\n\n");
		}

		printf("\n");

		for (i = 0; i<strlen(temporal); i++) {
			printf(" %c ", temporal[i]);
		}

		printf("\n");

		if (strcmp(frase, temporal) == 0) {
			gano = 1;
			break;
		}

		printf("\n");
		printf("Letras Acertadas: %d", acertado);
		printf("\n");
		printf("Oportunidades Restantes: %d", oportunidades);
		printf("\n");

		rep[j] = pal;
		j++;

		if (oportunidades == 0)
		{
			break;
		}

		printf("Introduzca una letra:");
		scanf("\n%c", &pal);

	} while (oportunidades != 0);


	if (gano) {
		printf("\n\n");
		printf("Enhorabuena, has ganado.");
	}
	else {
		printf("\n\n");
		printf("Has perdido.");
	}

	printf("\n\n");
	getch();
	return 0;

}
*/